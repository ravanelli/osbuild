#!/usr/bin/python3
import os
import subprocess
import sys

import osbuild.api


def main(inputs, tree, options, devices):
    # Size of file used to embed an Ignition config within a CPIO.
    IGNITION_IMG_SIZE = 256 * 1024

    path = 
    image = 
    output = 
     if basearch != 's390x':
        with open(os.path.join(tmpisoimages, 'ignition.img'), 'wb') as fdst:
            fdst.write(bytes(IGNITION_IMG_SIZE))
        igninfo_json = {'file': 'images/ignition.img'}
     else:
          CDBOOT_IMG_OFFS_INITRD_START_BYTES = 66568
          iso_initramfs = os.path.join(tmpisoimagespxe, initrd_img)
          initramfs_size = os.stat(iso_initramfs).st_size
          # sanity-check it's 4-byte aligned (see align_initrd_for_uncompressed_append)
          assert initramfs_size % 4 == 0
          with open(os.path.join(tmpisoimages, 'cdboot.img'), 'rb') as f:
            f.seek(CDBOOT_IMG_OFFS_INITRD_START_BYTES)
            offset = struct.unpack(">Q", f.read(8))[0]

          igninfo_json = {
                'file': 'images/cdboot.img',
                'offset': offset + initramfs_size,
                'length': IGNITION_IMG_SIZE,
            }
    # Write out the igninfo.json file. This is used by coreos-installer to know
    
    # how to embed the Ignition config.
    with open(os.path.join(tmpisocoreos, igninfo_file), 'w') as fh:
        json.dump(igninfo_json, fh, indent=2, sort_keys=True)  # pylint: disable=E0601
        fh.write('\n')
    return 0


if __name__ == '__main__':
    args = osbuild.api.arguments()
    r = main(args["inputs"], args["tree"], args["options"], args["devices"])
    sys.exit(r)
